service: testconvertersapp

frameworkVersion: '2'

# npm install serverless-s3-remover
plugins:
  - serverless-s3-remover

provider:
  name: aws
  region: eu-central-1
  runtime: dotnetcore3.1
  memorySize: 128
  lambdaHashingVersion: 20201221

  iamRoleStatements:
    - Effect: Allow
      Action:
      - sns:Publish
      Resource:
        - { Ref: FileUploadedTopic }
  
package:
  individually: true

custom:
  remover:
     buckets:
        - { Ref: OriginalBucket }

functions:
  FileUploaded:
    handler: Pipeline.FileUploaded::Pipeline.FileUploaded.FileUploadedHandler::OriginalFileUploaded
    timeout: 10
    environment:
      FILE_UPLOADED_TOPIC_ARN: { Ref: FileUploadedTopic }
      RESULT_BUCKET_NAME: { Ref: ResultBucket }
    package:
      artifact: Pipeline.FileUploaded/bin/Release/netcoreapp3.1/Pipeline.FileUploaded.zip
    events:
      - s3:
          bucket:  { Ref: OriginalBucket }
          event: s3:ObjectCreated:*
          existing: true

  CopyOriginalFile:
    handler: Pipeline.CopyOriginalFile::Pipeline.CopyOriginalFile.FileUploadedHandler::OriginalFileUploaded
    package:
      artifact: Pipeline.CopyOriginalFile/bin/Release/netcoreapp3.1/Pipeline.CopyOriginalFile.zip
    events:
     - sqs:
         arn: !GetAtt CopyOriginalFileQueue.Arn

  #DummyConvert:
  #  image: <image>
  #  events:
  #   - sqs:
  #       arn: !GetAtt DummyConverterQueue.Arn

resources:
  Resources:
    OriginalBucket:
      Type: "AWS::S3::Bucket"

    ResultBucket:
      Type: "AWS::S3::Bucket"

    FileUploadedTopic:
      Type: "AWS::SNS::Topic"
      Properties:
        TopicName: "testconvertersapp-FileUploaded"

    # Copy original file queue
    CopyOriginalFileQueue:
      Type: "AWS::SQS::Queue"
      
    CopyOriginalFileQueuePolicy:
      Type: AWS::SQS::QueuePolicy
      Properties:
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Sid: Allow-SNS-SendMessage
            Effect: Allow
            Principal: "*"
            Action:
              - sqs:SendMessage
            Resource: !GetAtt CopyOriginalFileQueue.Arn
            Condition:
              ArnEquals:
                aws:SourceArn: !Ref FileUploadedTopic
        Queues:
          - !Ref CopyOriginalFileQueue

    CopyOriginalFileQueueSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Protocol: sqs
        Endpoint: !GetAtt CopyOriginalFileQueue.Arn
        Region: "${self:provider.region}"
        TopicArn: !Ref FileUploadedTopic
        RawMessageDelivery: 'true'